import java.io.IOException;
import java.io.PrintWriter;
import java.net.Socket;
import java.util.ArrayList;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.WindowConstants;
//import trabalho.MinhaConexao;

public class CadastraQuestao extends javax.swing.JFrame {

    Scanner in;
    PrintWriter out;
    private String login1;
    private int question1;
    private int qtd1;
    JFrame father;

    /**
     * Creates new form CadastraQuestao
     */
    public CadastraQuestao() {
        initComponents();
        question1 = 0;
    }

    public CadastraQuestao(JFrame father) {
        initComponents();
        this.father = father;
        question1 = 0;
// TODO add your handling code here:
    }

    public CadastraQuestao(String nome, int qtd) {//SEMPRE ENTRA NESSE
        initComponents();
        login1 = nome;
        qtd1 = qtd;
        question1 = 0;
    }

    public CadastraQuestao(String nome, int question, int qtd) {
        initComponents();
        login1 = nome;
        question1 = question;
        qtd1 = qtd;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtQuestao = new javax.swing.JTextPane();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        sel1 = new javax.swing.JComboBox();
        jLabel13 = new javax.swing.JLabel();
        sel2 = new javax.swing.JComboBox();
        jLabel14 = new javax.swing.JLabel();
        jScrollPane11 = new javax.swing.JScrollPane();
        txtNumAssert = new javax.swing.JTextPane();
        jLabel15 = new javax.swing.JLabel();
        dific = new javax.swing.JComboBox();
        jLabel16 = new javax.swing.JLabel();
        minuto = new javax.swing.JSpinner();
        segundo = new javax.swing.JSpinner();
        jScrollPane3 = new javax.swing.JScrollPane();
        Cadastra = new javax.swing.JTextPane();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        Cadastra_Topico = new javax.swing.JTextPane();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        jLabel7.setText("jLabel7");

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Plataforma do Professor");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Tempus Sans ITC", 0, 48)); // NOI18N
        jLabel1.setText("Insira a questão");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 10, -1, -1));

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Insira a pergunta :");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 70, -1, 40));

        jScrollPane1.setViewportView(txtQuestao);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 80, 860, -1));

        jButton1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton1.setText("Adicionar Questão");
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(300, 420, -1, -1));

        jButton2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jButton2.setText("Cancelar Questionário");
        jButton2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(750, 420, -1, -1));

        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel12.setText("Insira a matéria da pergunta :");
        getContentPane().add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 130, -1, 32));

        sel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sel1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sel1.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                sel1ComponentResized(evt);
            }
        });
        sel1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel1ActionPerformed(evt);
            }
        });
        getContentPane().add(sel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 130, -1, -1));

        jLabel13.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel13.setText("Insira a sub-matéria da pergunta :");
        getContentPane().add(jLabel13, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 170, 380, 50));

        sel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        sel2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        sel2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sel2ActionPerformed(evt);
            }
        });
        getContentPane().add(sel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 180, -1, -1));

        jLabel14.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel14.setText("Insira o número de assertivas :");
        getContentPane().add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 340, -1, 32));

        jScrollPane11.setViewportView(txtNumAssert);

        getContentPane().add(jScrollPane11, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 350, 230, -1));

        jLabel15.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel15.setText("Insira a dificuldade da pergunta :");
        getContentPane().add(jLabel15, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 230, -1, 50));

        dific.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        dific.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Facil", "Medio", "Dificil" }));
        dific.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        dific.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dificActionPerformed(evt);
            }
        });
        getContentPane().add(dific, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 240, -1, -1));

        jLabel16.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel16.setText("Insira o tempo da pergunta :");
        getContentPane().add(jLabel16, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, -1, 32));

        minuto.setModel(new javax.swing.SpinnerNumberModel(Integer.valueOf(0), Integer.valueOf(0), null, Integer.valueOf(1)));
        minuto.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(minuto, new org.netbeans.lib.awtextra.AbsoluteConstraints(360, 300, 60, -1));

        segundo.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 1));
        segundo.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        getContentPane().add(segundo, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 300, 60, -1));

        jScrollPane3.setViewportView(Cadastra);

        getContentPane().add(jScrollPane3, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 120, 260, -1));

        jLabel3.setText("Minutos");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 300, -1, -1));

        jLabel4.setText("Segundos");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 300, -1, -1));

        jScrollPane2.setViewportView(Cadastra_Topico);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(830, 160, 260, -1));

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel5.setText("Outra:");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 160, -1, -1));

        jLabel6.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel6.setText("Outra:");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/7335.jpg"))); // NOI18N
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(-10, -40, 1380, 520));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents


    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // BOTAO ADDD QUESTAO
        Object materia = sel1.getSelectedItem();//SELETOR DE MATERIAS JAH CADASTRADAS
        Object submateria = sel2.getSelectedItem();//SELETOR DE TOPICOS JAH CADASTRADOS
        Object dificuldade = dific.getSelectedItem();
        int minuto1 = (int) minuto.getValue();
        int segundo1 = (int) segundo.getValue();
        String pergunta = txtQuestao.getText();
        String Cadastra1 = Cadastra.getText();//MATERIA AINDA NAO CADASTRADA
        String Cadastra2 = Cadastra_Topico.getText();//TOPICO (SUBMATERIA) AINDA NAO CADASTRADO
        String num_assert = txtNumAssert.getText();

        if (pergunta.equals("") || num_assert.equals("") || (minuto1 == 0 && segundo1 == 0) || (materia.equals("Selecionar Outro") && Cadastra1.equals("")) || (submateria.equals("Selecionar Outro") && Cadastra2.equals(""))) {//testar !(materia || Cadastra1) || !(submateria || Cadastra2)
            JOptionPane.showMessageDialog(null, "Nenhum campo pode estar em branco.", "Erro ao efetuar o Cadastro!", JOptionPane.ERROR_MESSAGE);
        } else {

            try {
                Socket socket = new Socket("192.168.91.60", 59001); //INFOS DO SERVIDOR
                in = new Scanner(socket.getInputStream());
                out = new PrintWriter(socket.getOutputStream(), true);

                int cond = 0;
                out.println("CADASTRAR_QUESTAO " + login1 + "‰" + materia + "‰" + submateria + "‰" + Cadastra1 + "‰" + Cadastra2 + "‰" + pergunta + "‰" + num_assert + "‰" + minuto1 + "‰" + segundo1 + "‰" + dificuldade + "‰" + qtd1);//login1 eh o login do prof 

                while (!out.equals("")) {

                    cond = 1;
                    String input = in.nextLine();

                    if (input.substring(0, 18).equals("QUESTAO_CADASTRADA")) {////VER QUE INPUT EH PRA FAZER ISSO
                        question1 = Integer.parseInt(input.substring(18, input.indexOf("‰")));//ARRUMAR OS INDICES
                        int questionarioID = question1;
                        int questaoID = Integer.parseInt(input.substring(input.indexOf("‰") + 1));//ARRUMAR OS INDICES
                        this.setVisible(false);
                        CadastraAssert mc = new CadastraAssert(login1, questionarioID, Integer.parseInt(num_assert), questaoID, qtd1);//question1 eh o PIN do questionario que esta sendo cadastrado, i eh o indice da questao que acabou de ser adicionada na tabela questoes
                        mc.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
                        mc.setVisible(true);
                        break;
                    } else {
                        JOptionPane.showMessageDialog(null, "Tente novamente!", "Erro ao cadastrar a questao", JOptionPane.ERROR_MESSAGE);
                        minuto.setValue("0");
                        segundo.setValue("0");
                        txtQuestao.setText("");
                        Cadastra.setText("");//MATERIA
                        Cadastra_Topico.setText("");//TOPICO (SUBMATERIA)
                        txtNumAssert.setText("");
                    }
                }
                if (cond == 0) {
                    JOptionPane.showMessageDialog(null, "Tente novamente!", "Erro ao cadastrar a questao", JOptionPane.ERROR_MESSAGE);
                    minuto.setValue("0");
                    segundo.setValue("0");
                    txtQuestao.setText("");
                    Cadastra.setText("");//MATERIA
                    Cadastra_Topico.setText("");//TOPICO (SUBMATERIA)
                    txtNumAssert.setText("");
                }
                socket.close();
            } catch (IOException ex) {
                JOptionPane.showMessageDialog(null, "Servidor fora do ar, aguarde...", "Erro ao cadastrar a questao", JOptionPane.ERROR_MESSAGE);
                Logger.getLogger(CadastraQuestao.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        try {
            Socket socket = new Socket("192.168.91.60", 59001); //INFOS DO SERVIDOR
            out = new PrintWriter(socket.getOutputStream(), true);
            out.println("ABORTAR_QUESTIONARIO      "+qtd1);
            socket.close();
        } catch (IOException ex) {
            JOptionPane.showMessageDialog(null, "Servidor fora do ar, aguarde...", "Erro ao cadastrar a questao", JOptionPane.ERROR_MESSAGE);
            Logger.getLogger(CadastraQuestao.class.getName()).log(Level.SEVERE, null, ex);
        }
        this.setVisible(false);
        TelaProfessor1 mc = new TelaProfessor1(login1);
        mc.setDefaultCloseOperation(WindowConstants.DISPOSE_ON_CLOSE);
        mc.setVisible(true);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void sel1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel1ActionPerformed
        //SELETOR DA MATERIA DA QUESTAO
        sel1.setSelectedItem(this);
        ArrayList<String> strList1 = new ArrayList<String>();
        Object mat = sel1.getSelectedItem();

        try {
            Socket socket = new Socket("192.168.91.60", 59001); //INFOS DO SERVIDOR
            in = new Scanner(socket.getInputStream());
            out = new PrintWriter(socket.getOutputStream(), true);

            int cond = 0;
            out.println("SELETOR_TOPICOS" + mat);
            strList1.add("Selecionar Outro");
            while (!out.equals("")) {

                cond = 1;
                String input = in.nextLine();

                if (input.substring(0, 11).equals("MATERIAS_OK")) {

                    strList1.add(input.substring(11));
                } else {
                    DefaultComboBoxModel model2 = new DefaultComboBoxModel(strList1.toArray());
                    sel2.setModel(model2);
                    break;
                }
            }
            if (cond == 0) {
                strList1.add("Selecionar Outro");
                DefaultComboBoxModel model2 = new DefaultComboBoxModel(strList1.toArray());
                sel2.setModel(model2);
                socket.close();
            }
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(CadastraQuestao.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_sel1ActionPerformed

    private void sel2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sel2ActionPerformed
        sel2.setSelectedItem(this);
    }//GEN-LAST:event_sel2ActionPerformed

    private void dificActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dificActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_dificActionPerformed

    private void sel1ComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_sel1ComponentResized
        // TODO add your handling code here:
        // TODO add your handling code here:
        ArrayList<String> strList = new ArrayList<String>();//MATERIA
        try {
            Socket socket = new Socket("192.168.91.60", 59001); //INFOS DO SERVIDOR
            in = new Scanner(socket.getInputStream());
            out = new PrintWriter(socket.getOutputStream(), true);

            int cond = 0;
            out.println("SELETOR_MATERIA");
            strList.add("Selecionar Outro");
            while (!out.equals("")) {

                cond = 1;
                String input = in.nextLine();

                if (input.substring(0, 11).equals("MATERIAS_OK")) {

                    strList.add(input.substring(11));
                } else {
                    DefaultComboBoxModel model1 = new DefaultComboBoxModel(strList.toArray());
                    sel1.setModel(model1);
                    break;
                }
            }
            if (cond == 0) {
                strList.add("Selecionar Outro");
                DefaultComboBoxModel model1 = new DefaultComboBoxModel(strList.toArray());
                sel1.setModel(model1);
                socket.close();
            }
            socket.close();
        } catch (IOException ex) {
            Logger.getLogger(CadastraQuestao.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_sel1ComponentResized

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastraQuestao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastraQuestao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastraQuestao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastraQuestao.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastraQuestao().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextPane Cadastra;
    private javax.swing.JTextPane Cadastra_Topico;
    private javax.swing.JComboBox dific;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane11;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JSpinner minuto;
    private javax.swing.JSpinner segundo;
    private javax.swing.JComboBox sel1;
    private javax.swing.JComboBox sel2;
    private javax.swing.JTextPane txtNumAssert;
    private javax.swing.JTextPane txtQuestao;
    // End of variables declaration//GEN-END:variables

    private static class CadastraTopico {

        public CadastraTopico() {
        }
    }
}
